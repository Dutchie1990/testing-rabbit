{
	"info": {
		"_postman_id": "04e4d1b3-b075-4dab-ad71-04bb131ace80",
		"name": "OrderPizzaAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
							"    //Set access token for this testrun\r",
							"    pm.globals.set(\"my_token\", pm.response.json().access_token);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"test\",\n\t\"password\": \"test\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/auth",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth"
					]
				},
				"description": "{{url}}/api/auth"
			},
			"response": []
		},
		{
			"name": "First Orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Set up variables for the tests\", () => {\r",
							"    var jsonData = pm.response.json()\r",
							"\r",
							"    //Set up testdata in order to get valid orders and in order to delete the added order\r",
							"    if (jsonData.length < 1){\r",
							"        pm.globals.set(\"Order_ID\", 1)\r",
							"        pm.globals.set(\"Table_No\", 1)\r",
							"    } else if (jsonData.length === 1){\r",
							"        pm.globals.set(\"Order_ID\", jsonData[0].Order_ID)\r",
							"        var newTablenumber = jsonData[0].Table_No + 1\r",
							"        pm.globals.set(\"Table_No\", newTablenumber)\r",
							"    } else{\r",
							"        var lastOrder = jsonData[jsonData.length - 1].Order_ID\r",
							"        pm.globals.set(\"Order_ID\", lastOrder + 1)\r",
							"\r",
							"        jsonData.sort(sortByProperty(\"Table_No\"))\r",
							"        var highestTableNumber = jsonData[jsonData.length - 1].Table_No\r",
							"        pm.globals.set(\"Table_No\", highestTableNumber + 1)\r",
							"    }\r",
							"})\r",
							"\r",
							"function sortByProperty(property){  \r",
							"   return function(a,b){  \r",
							"      if(a[property] > b[property])  \r",
							"         return 1;  \r",
							"      else if(a[property] < b[property])  \r",
							"         return -1;  \r",
							"  \r",
							"      return 0;  \r",
							"   }  \r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/orders",
					"host": [
						"{{url}}"
					],
					"path": [
						"orders"
					]
				},
				"description": "{{url}}/api/orders"
			},
			"response": []
		},
		{
			"name": "Add Order",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let body = {\r",
							"        Crust: \"test\",\r",
							"        Flavor: \"test\",\r",
							"        Size: \"test\",\r",
							"        Table_No: pm.globals.get(\"Table_No\")\r",
							"}\r",
							"console.log(body)\r",
							"pm.globals.set('body', JSON.stringify(body));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", () => {\r",
							"    var jsonData = pm.response.json()\r",
							"    pm.expect(jsonData.Crust).to.equal(\"test\")\r",
							"    pm.expect(jsonData.Flavor).to.equal(\"test\")\r",
							"    pm.expect(jsonData.Size).to.equal(\"test\")\r",
							"    pm.expect(jsonData.Table_No).to.equal(pm.globals.get('Table_No'))\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{my_token}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.{{access_token}}.AwcEaysSvJ35tt_a97kgYwC9ucZEg28tJS1B19yVcrs",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{body}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/orders",
					"host": [
						"{{url}}"
					],
					"path": [
						"orders"
					]
				},
				"description": "{{url}}/api/orders"
			},
			"response": []
		},
		{
			"name": "Second Orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", () => {\r",
							"    var jsonData = pm.response.json()\r",
							"\r",
							"    results = []\r",
							"    var searchField = \"Order_ID\" + 1;\r",
							"    var searchVal = pm.globals.get(\"Order_ID\");\r",
							"    for (var i=0 ; i < jsonData.length ; i++)\r",
							"        {\r",
							"            if (jsonData[i][searchField] == searchVal) {\r",
							"                results.push(jsonData[i]);\r",
							"                console.log(results)\r",
							"                pm.expect(results[0].Crust).to.equal(\"test\"),\r",
							"\t\t\t\tpm.expect(results[0].Flavor).to.equal(\"test\"),\r",
							"\t\t\t\tpm.expect(results[0].Size).to.equal(\"test\"),\r",
							"\t\t\t\tpm.expect(results[0].Table_No).to.equal(pm.globals.get('Table_No'))\r",
							"        }\r",
							"    }\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/orders",
					"host": [
						"{{url}}"
					],
					"path": [
						"orders"
					]
				},
				"description": "{{url}}/api/orders"
			},
			"response": []
		},
		{
			"name": "Delete Order",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.json().message).to.include(\"Order deleted\");\r",
							"});\r",
							"\r",
							"pm.globals.clear()\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{my_token}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.{{access_token}}.AwcEaysSvJ35tt_a97kgYwC9ucZEg28tJS1B19yVcrs",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/orders/{{Order_ID}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"orders",
						"{{Order_ID}}"
					]
				},
				"description": "{{url}}/api/orders/1"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://order-pizza-api.herokuapp.com/api"
		}
	]
}